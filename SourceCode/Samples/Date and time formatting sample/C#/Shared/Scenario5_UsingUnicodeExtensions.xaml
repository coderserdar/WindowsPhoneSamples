<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page x:Class="DateTimeFormatting.UsingUnicodeExtensions" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="using:DateTimeFormatting" xmlns:common="using:SDKTemplate.Common" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">
  <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
    <ScrollViewer>
      <StackPanel Margin="10,10,10,10">
        <TextBlock Style="{StaticResource ScenarioDescriptionTextStyle}" TextWrapping="Wrap">
          This example shows how to format dates and times by using unicode
          extensions in specified languages, overriding the user’s default global
          context if applicable. This method is used when an application has an
          experience that needs to present dates or times that reflect different
          settings from the user’s current defaults by specifying the overrides
          directly as extensions in language tags.
        </TextBlock>
        <Button Content="Display" Click="Display_Click"/>
        <TextBlock x:Name="OutputTextBlock" Text="" TextWrapping="Wrap" Style="{StaticResource BaseMessageStyle}"/>
      </StackPanel>
    </ScrollViewer>
  </Grid>
</Page>