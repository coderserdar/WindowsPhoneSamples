<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
//
//*********************************************************
-->
<Page x:Class="AppBarControl.Scenario6" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="using:AppBarControl" xmlns:common="using:SDKTemplate.Common" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">
    <Page.BottomAppBar>
        <CommandBar>
            <CommandBar.PrimaryCommands>
                <AppBarButton x:Uid="Add" Icon="Add" Label="Add" />
                <AppBarButton x:Uid="Remove" Icon="Remove" Label="Remove"/>
                <AppBarButton x:Uid="Delete" Icon="Delete" Label="Delete"/>
            </CommandBar.PrimaryCommands>
            <CommandBar.SecondaryCommands>
                <AppBarButton x:Uid="Camera" Icon="Camera" Label="Camera" />
            </CommandBar.SecondaryCommands>
        </CommandBar>
    </Page.BottomAppBar>
    <ScrollViewer>
        <Grid x:Name="LayoutRoot" HorizontalAlignment="Left" VerticalAlignment="Top">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid x:Name="Input" Grid.Row="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock x:Name="InputTextBlock1" TextWrapping="Wrap" Grid.Row="0" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left">
         This example shows how to programmatically control the CommandBar and its
        commands.
        <LineBreak/>
        <LineBreak/>
         To detect changes in the CommandBar state, listen for the
        AppBar's beforeshow, aftershow, beforehide, or afterhide events.
        <LineBreak/>
        <LineBreak/>
         The Show Commands and Hide Commands buttons use the showCommands and
        hideCommands methods to control the visibility of commands.
        <LineBreak/>
        <LineBreak/>
         This CommandBar is set to sticky and is not dismissed when the user
        interacts with the application. If you need an CommandBar to remain visible
        while the user interacts with their content (such as selecting multiple
        items), set the sticky property to true.
                </TextBlock>
                <StackPanel Orientation="Horizontal" Margin="0,10,0,0" Grid.Row="1">
                    <Button x:Name="ShowCommands" Content="Show Commands" Margin="0,0,10,0" Click="ShowCommands_Click" IsEnabled="False"/>
                    <Button x:Name="HideCommands" Content="Hide Commands" Margin="0,0,10,0" Click="HideCommands_Click" IsEnabled="False"/>
                </StackPanel>
                <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the input section -->
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup>
                        <VisualState x:Name="InputDefaultLayout"/>
                        <VisualState x:Name="InputBelow768Layout"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Grid>
            <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
                <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the output section -->
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup>
                        <VisualState x:Name="OutputDefaultLayout"/>
                        <VisualState x:Name="OutputBelow768Layout"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Grid>
        </Grid>
    </ScrollViewer>
</Page>