<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page x:Class="DateTimeFormatting.StringTemplate" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="using:DateTimeFormatting" xmlns:common="using:SDKTemplate.Common" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">
  <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
    <ScrollViewer>
      <StackPanel Margin="10,10,10,10">
        <TextBlock Style="{StaticResource ScenarioDescriptionTextStyle}" TextWrapping="Wrap">
          This example shows how to format the current date and time using
          custom formats that are specified using a template string. This method
          for formatting dates or times can be used when the requirements for the
          date presentation do not match the “short” or “long” form.
          <LineBreak/>
          <Run Text="   For example, if the user experience requires only a month and a day or a month and a year, or needs to combine date and times with timezone information, this method allows the application to present only those date elements, but still in a format that respects the user’s preferences."/>
        </TextBlock>
        <Button Content="Display" Click="Display_Click"/>
        <TextBlock x:Name="OutputTextBlock" Text="" TextWrapping="Wrap" Style="{StaticResource BaseMessageStyle}"/>
      </StackPanel>
    </ScrollViewer>
  </Grid>
</Page>