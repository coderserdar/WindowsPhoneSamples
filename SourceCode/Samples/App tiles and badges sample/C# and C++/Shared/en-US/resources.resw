<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="greeting" xml:space="preserve">
    <value>Hello from en-US!</value>
  </data>
  <data name="TileSquare310x150BlockAndText01" xml:space="preserve">
    <value>Windows 8 name: TileWideBlockAndText01.

Four strings of regular, unwrapped text on the left; large block text over a single, short string of bold, regular text on the right.</value>
  </data>
  <data name="TileSquare310x150BlockAndText02" xml:space="preserve">
    <value>Windows 8 name: TileWideBlockAndText02

One string of regular text wrapped over a maximum of four lines on the left; large block text over a single, short string of bold, regular text on the right.</value>
  </data>
  <data name="TileSquare310x310ImageAndTextOverlay01" xml:space="preserve">
    <value>Background: a single image that fills the entire tile. Foreground: One string of text wrapped over a maximum of three lines. If the text color is light, the image is darkened a bit to improve the text visibility. Windows-only template.

If both a background image and text content is provided, and the text color is light, then a 30% black wash will be applied to the image.</value>
  </data>
  <data name="TileSquare310x310ImageAndTextOverlay02" xml:space="preserve">
    <value>Background: a single image that fills the entire tile. Foreground: At the top, one string of large text wrapped over a maximum of two lines; at the bottom, one string of regular text wrapped over a maximum of three lines. If the text color is light, the image is darkened a bit to improve the text visibility. Windows-only template.

If both a background image and text content is provided, and the text color is light, then a 30% black wash will be applied to the image.</value>
  </data>
  <data name="TileSquare310x310ImageAndTextOverlay03" xml:space="preserve">
    <value>Background: a single image that fills the entire tile. Foreground: At the top, one string of large text wrapped over a maximum of two lines; at the bottom, three strings of regular text on three lines that do not wrap. If the text color is light, the image is darkened a bit to improve the text visibility. Windows-only template.

If both a background image and text content is provided, and the text color is light, then a 30% black wash will be applied to the image.</value>
  </data>
  <data name="TileSquare150x150Block" xml:space="preserve">
    <value>Windows 8 name: TileSquareBlock

One string of large block text over a single, short line of bold, regular text.</value>
  </data>
  <data name="TileSquare150x150Image" xml:space="preserve">
    <value>Windows 8 name: TileSquareImage

One square image that fills the entire tile, no text.</value>
  </data>
  <data name="TileSquare150x150PeekImageAndText01" xml:space="preserve">
    <value>Windows 8 name: TileSquarePeekImageAndText01

Top: One square image, no text.
Bottom: One header string in larger text on the first line, three strings of regular text on each of the next three lines. Text does not wrap.</value>
  </data>
  <data name="TileSquare150x150PeekImageAndText02" xml:space="preserve">
    <value>Windows 8 name: TileSquarePeekImageAndText02

Top: Square image, no text.
Bottom: One header string in larger text on the first line, over one string of regular text wrapped over a maximum of three lines.</value>
  </data>
  <data name="TileSquare150x150PeekImageAndText03" xml:space="preserve">
    <value>Windows 8 name: TileSquarePeekImageAndText03

Top: Square image, no text.
Bottom: Four strings of regular text on four lines. Text does not wrap.</value>
  </data>
  <data name="TileSquare150x150PeekImageAndText04" xml:space="preserve">
    <value>Windows 8 name: TileSquarePeekImageAndText04

Top: Square image, no text.
Bottom: One string of regular text wrapped over a maximum of four lines.</value>
  </data>
  <data name="TileSquare150x150Text01" xml:space="preserve">
    <value>Windows 8 name: TileSquareText01

One header string in larger text on the first line; three strings of regular text on each of the next three lines. Text does not wrap.</value>
  </data>
  <data name="TileSquare150x150Text02" xml:space="preserve">
    <value>Windows 8 name: TileSquareText02

One header string in larger text on the first line, over one string of regular text wrapped over a maximum of three lines.</value>
  </data>
  <data name="TileSquare150x150Text03" xml:space="preserve">
    <value>Windows 8 name: TileSquareText03

Four strings of regular text on four lines. Text does not wrap.</value>
  </data>
  <data name="TileSquare150x150Text04" xml:space="preserve">
    <value>Windows 8 name: TileSquareText04

One string of regular text wrapped over a maximum of four lines.</value>
  </data>
  <data name="TileSquare310x310BlockAndText01" xml:space="preserve">
    <value>Two main text groups separated by a blank area: One string of large text, which can wrap over up to two lines, sitting over two strings of unwrapped regular text on two lines. •Four strings on four lines, separated slightly into two sets. To the side is one string of large block text (this should be numerical) over a single, short line of bold, regular text. Windows-only template.</value>
  </data>
  <data name="TileSquare310x310BlockAndText02" xml:space="preserve">
    <value>One string of large block text (this should be numerical); two lines of large header text (no wrap); two sets of two strings in two lines (no wrap). Image in the background. If the text color is light, the image is darkened a bit to improve the text visibility. Windows-only template.</value>
  </data>
  <data name="TileSquare310x310Image" xml:space="preserve">
    <value>One image that fills the entire tile; no text. Windows-only template.</value>
  </data>
  <data name="TileSquare310x310ImageAndText01" xml:space="preserve">
    <value>One image above one string of regular text wrapped over a maximum of two lines. The width of the text area depends on whether a logo is displayed. Windows-only template.</value>
  </data>
  <data name="TileSquare310x310ImageAndText02" xml:space="preserve">
    <value>One image above two strings of regular text on two lines. Text does not wrap. The width of the text area depends on whether a logo is displayed. Windows-only template.</value>
  </data>
  <data name="TileSquare310x310ImageCollection" xml:space="preserve">
    <value>Four small square images overlaid across the top one large, full-tile, square image. Note that the small images cut off the top of the large image. Windows-only template.</value>
  </data>
  <data name="TileSquare310x310ImageCollectionAndText01" xml:space="preserve">
    <value>TileSquare310x310ImageCollection with the addition of a text ribbon across the bottom of the tile. The text area contains one string of regular text wrapped over a maximum of two lines. Note that the small images cut off the top of the large image while the text area cuts off the bottom of the image. The width of the text area depends on whether a logo is displayed. Windows-only template.</value>
  </data>
  <data name="TileSquare310x310ImageCollectionAndText02" xml:space="preserve">
    <value>TileSquare310x310ImageCollection with the addition of a text ribbon across the bottom of the tile. The text area contains two strings of regular text on two lines. Text does not wrap. Note that the small images cut off the top of the large image while the text area cuts off the bottom of the image. The width of the text area depends on whether a logo is displayed. Windows-only template.</value>
  </data>
  <data name="TileSquare310x310SmallImagesAndTextList01" xml:space="preserve">
    <value>Three sets of information, each of which consists of one small square image to the left of one header string in larger text over two strings of regular text on the next two lines. Text does not wrap. Windows-only template.</value>
  </data>
  <data name="TileSquare310x310SmallImagesAndTextList02" xml:space="preserve">
    <value>Up to three sets of information, each of which consists of one small square image to the left of one string of regular text wrapped over a maximum of three lines. Windows-only template.</value>
  </data>
  <data name="TileSquare310x310SmallImagesAndTextList03" xml:space="preserve">
    <value>Up to three sets of information, each of which consists of one small square image to the left of one string of large text over one string of regular text wrapped over a maximum of two lines. Windows-only template.</value>
  </data>
  <data name="TileSquare310x310SmallImagesAndTextList04" xml:space="preserve">
    <value>Up to three sets of information, each of which consists of one small rectangular image to the right of one string of large text over one string of regular text wrapped over a maximum of two lines. Windows-only template.</value>
  </data>
  <data name="TileSquare310x310SmallImagesAndTextList05" xml:space="preserve">
    <value>One line of header text across the top, over three sets of information, each of which consists of one small square image to the left of one header string in larger text over two strings of regular text on the next two lines. Text does not wrap. Windows-only template.</value>
  </data>
  <data name="TileSquare310x310Text01" xml:space="preserve">
    <value>One header string in larger text on the first line, nine strings of regular text on the next nine lines. Text does not wrap. Windows-only template.</value>
  </data>
  <data name="TileSquare310x310Text02" xml:space="preserve">
    <value>One header string in larger text over eighteen short strings arranged in two columns of nine lines each. Columns are of equal width. This template is similar to TileSquare310x310Text05 and TileSquare310x310Text07, but those templates use columns of unequal width. Windows-only template.</value>
  </data>
  <data name="TileSquare310x310Text03" xml:space="preserve">
    <value>Eleven strings of regular text on eleven lines. Text does not wrap. Windows-only template.</value>
  </data>
  <data name="TileSquare310x310Text04" xml:space="preserve">
    <value>Twenty-two short strings of regular text, arranged in two columns of eleven lines each. Columns are of equal width. This template is similar to TileSquare310x310Text06 and TileSquare310x310Text08, but those templates use columns of unequal width. Windows-only template.</value>
  </data>
  <data name="TileSquare310x310Text05" xml:space="preserve">
    <value>One header string in larger text over eighteen short strings of regular text arranged in two columns of nine lines each. The column widths are such that the first column acts as a label and the second column as the content. This template is similar to TileSquare310x310Text07, which has an even narrower first column, and TileSquare310x310Text02, which has columns of equal width. Windows-only template.</value>
  </data>
  <data name="TileSquare310x310Text06" xml:space="preserve">
    <value>Twenty-two short strings of regular text arranged in two columns of eleven lines each. The column widths are such that the first column acts as a label and the second column as the content. This template is similar to TileSquare310x310Text08, which has an even narrower first column, and TileSquare310x310Text04, which has columns of equal width. Windows-only template.</value>
  </data>
  <data name="TileSquare310x310Text07" xml:space="preserve">
    <value>One header string in larger text over eighteen short strings of regular text arranged in two columns of nine lines each. The column widths are such that the first column acts as a label and the second column as the content. This template is similar to TileSquare310x310Text05, which has a wider first column, and TileSquare310x310Text02, which has columns of equal width. Windows-only template.</value>
  </data>
  <data name="TileSquare310x310Text08" xml:space="preserve">
    <value>Twenty-two short strings of regular text arranged in two columns of eleven lines each. The column widths are such that the first column acts as a label and the second column as the content. This template is similar to TileSquare310x310Text06, which has a wider first column, and TileSquare310x310Text04, which has columns of equal width. Windows-only template.</value>
  </data>
  <data name="TileSquare310x310Text09" xml:space="preserve">
    <value>One line of header text wrapped over a maximum of two lines. Beneath are two more, slightly separated lines of header text, each one line only. At the bottom are two lines of regular text, each of one line only. Windows-only template.</value>
  </data>
  <data name="TileSquare310x310TextList01" xml:space="preserve">
    <value>Three stacked notices, each containing one header string in larger text on the first line, two strings of regular text on the next two lines. Text does not wrap. Windows-only template.</value>
  </data>
  <data name="TileSquare310x310TextList02" xml:space="preserve">
    <value>Three stacked notices, each containing one string of regular text wrapped over a maximum of three lines. Windows-only template.</value>
  </data>
  <data name="TileSquare310x310TextList03" xml:space="preserve">
    <value>Three stacked notices, each containing one header string in larger text over one string of regular text wrapped over a maximum of two lines. Windows-only template.</value>
  </data>
  <data name="TileSquare310x310SmallImageAndText01" xml:space="preserve">
    <value>One medium-sized image in the upper left corner (upper right on right-to-left systems) over a single, unwrapped header string. Beneath this are two sets of regular text: the first wrapped over a maximum of two lines, the second a single line only. Windows-only template.</value>
  </data>
  <data name="TileWide310x150BlockAndText01" xml:space="preserve">
    <value>Windows 8 name: TileWideBlockAndText01

Four strings of regular, unwrapped text on the left; large block text over a single, short string of bold, regular text on the right.</value>
  </data>
  <data name="TileWide310x150BlockAndText02" xml:space="preserve">
    <value>Windows 8 name: TileWideBlockAndText02

One string of regular text wrapped over a maximum of four lines on the left; large block text over a single, short string of bold, regular text on the right.</value>
  </data>
  <data name="TileWide310x150Image" xml:space="preserve">
    <value>Windows 8 name: TileWideImage

One wide image that fills the entire tile, no text.</value>
  </data>
  <data name="TileWide310x150ImageAndText01" xml:space="preserve">
    <value>Windows 8 name: TileWideImageAndText01

One wide image over one string of regular text wrapped over a maximum of two lines. The width of the text area depends on whether a logo/short name or a badge is displayed.

Note:  This template allows branding only as "logo" or "none", but not "name". If you set the branding attribute to "name", it will automatically revert to "logo".</value>
  </data>
  <data name="TileWide310x150ImageAndText02" xml:space="preserve">
    <value>Windows 8 name: TileWideImageAndText02

One wide image over two strings of regular text on two lines. Text does not wrap. The width of the text area depends on whether a logo/short name or a badge is displayed.

Note:  This template allows branding only as "logo" or "none", but not "name". If you set the branding attribute to "name", it will automatically revert to "logo".</value>
  </data>
  <data name="TileWide310x150ImageCollection" xml:space="preserve">
    <value>Windows 8 name: TileWideImageCollection

One large square image with four smaller square images to its right, no text.</value>
  </data>
  <data name="TileWide310x150PeekImage01" xml:space="preserve">
    <value>Windows 8 name: TileWidePeekImage01

Top: One wide image.
Bottom: One header string in larger text over one string of regular text that wraps over a maximum of four lines.</value>
  </data>
  <data name="TileWide310x150PeekImage02" xml:space="preserve">
    <value>Windows 8 name: TileWidePeekImage02

Top: One wide image.
Bottom: One header string in larger text on the first line, four strings of regular text on the next four lines. Text does not wrap.</value>
  </data>
  <data name="TileWide310x150PeekImage03" xml:space="preserve">
    <value>Windows 8 name: TileWidePeekImage03

Top: One wide image.
Bottom: One string of large text wrapped over a maximum of three lines.</value>
  </data>
  <data name="TileWide310x150PeekImage04" xml:space="preserve">
    <value>Windows 8 name: TileWidePeekImage04

Top: One wide image.
Bottom: One string of regular text wrapped over a maximum of five lines.</value>
  </data>
  <data name="TileWide310x150PeekImage05" xml:space="preserve">
    <value>Windows 8 name: TileWidePeekImage05

Top: One wide image.
Bottom: On the left, one small image; on the right, one header string of larger text on the first line over one string of regular text wrapped over a maximum of four lines.</value>
  </data>
  <data name="TileWide310x150PeekImage06" xml:space="preserve">
    <value>Windows 8 name: TileWidePeekImage06

Top: One wide image.
Bottom: On the left, one small image; on the right, one string of large text wrapped over a maximum of three lines.</value>
  </data>
  <data name="TileWide310x150PeekImageAndText01" xml:space="preserve">
    <value>Windows 8 name: TileWidePeekImageAndText01

Top: One wide image.
Bottom: One string of regular text wrapped over a maximum of five lines.</value>
  </data>
  <data name="TileWide310x150PeekImageAndText02" xml:space="preserve">
    <value>Windows 8 name: TileWidePeekImageAndText02

Top: One wide image.
Bottom: Five strings of regular text on five lines. Text does not wrap.</value>
  </data>
  <data name="TileWide310x150PeekImageCollection01" xml:space="preserve">
    <value>Windows 8 name: TileWidePeekImageCollection01

Top: One large square image with four smaller square images to its right, no text.
Bottom: One header string in larger text over one string of regular text wrapped over a maximum of four lines.</value>
  </data>
  <data name="TileWide310x150PeekImageCollection02" xml:space="preserve">
    <value>Windows 8 name: TileWidePeekImageCollection02

Top: One large square image with four smaller square images to its right, no text.
Bottom: One header string in larger text on the first line, four strings of regular text on the next four lines. Text does not wrap.</value>
  </data>
  <data name="TileWide310x150PeekImageCollection03" xml:space="preserve">
    <value>Windows 8 name: TileWidePeekImageCollection03

Top: One large square image with four smaller square images to its right, no text.
Bottom: One string of large text wrapped over a maximum of three lines.</value>
  </data>
  <data name="TileWide310x150PeekImageCollection04" xml:space="preserve">
    <value>Windows 8 name: TileWidePeekImageCollection04

Top: One large square image with four smaller square images to its right, no text.
Bottom: One string of regular text wrapped over a maximum of five lines.</value>
  </data>
  <data name="TileWide310x150PeekImageCollection05" xml:space="preserve">
    <value>Windows 8 name: TileWidePeekImageCollection05

Top: One large square image with four smaller square images to its right, no text.
Bottom: On the left, one small image; on the right, one header string of larger text on the first line over one string of regular text wrapped over a maximum of four lines.</value>
  </data>
  <data name="TileWide310x150PeekImageCollection06" xml:space="preserve">
    <value>Windows 8 name: TileWidePeekImageCollection06

Top: One large square image with four smaller square images to its right, no text.
Bottom: On the left, one small image; on the right, one string of large text wrapped over a maximum of three lines.</value>
  </data>
  <data name="TileWide310x150SmallImageAndText01" xml:space="preserve">
    <value>Windows 8 name: TileWideSmallImageAndText01

On the left, one small image; on the right, one string of large text wrapped over a maximum of three lines.</value>
  </data>
  <data name="TileWide310x150SmallImageAndText02" xml:space="preserve">
    <value>Windows 8 name: TileWideSmallImageAndText02

On the left, one small image; on the right, one header string in larger text on the first line, four strings of regular text on the next four lines. Text does not wrap.</value>
  </data>
  <data name="TileWide310x150SmallImageAndText03" xml:space="preserve">
    <value>Windows 8 name: TileWideSmallImageAndText03

On the left, one small image; on the right, one string of regular text wrapped over a maximum of five lines.</value>
  </data>
  <data name="TileWide310x150SmallImageAndText04" xml:space="preserve">
    <value>Windows 8 name: TileWideSmallImageAndText04

On the left, one small image; on the right, one header string of larger text on the first line over one string of regular text wrapped over a maximum of four lines.</value>
  </data>
  <data name="TileWide310x150SmallImageAndText05" xml:space="preserve">
    <value>Windows 8 name: TileWideSmallImageAndText05

On the left, one header string in larger text over one string of regular text wrapped over a maximum of four lines; on the right, one small image with 3:4 dimensions.</value>
  </data>
  <data name="TileWide310x150Text01" xml:space="preserve">
    <value>Windows 8 name: TileWideText01

One header string in larger text on the first line, four strings of regular text on the next four lines. Text does not wrap.</value>
  </data>
  <data name="TileWide310x150Text02" xml:space="preserve">
    <value>Windows 8 name: TileWideText02

One header string in larger text over eight short strings arranged in two columns of four lines each. Columns are of equal width.</value>
  </data>
  <data name="TileWide310x150Text03" xml:space="preserve">
    <value>Windows 8 name: TileWideText03

One string of large text wrapped over a maximum of three lines.</value>
  </data>
  <data name="TileWide310x150Text04" xml:space="preserve">
    <value>Windows 8 name: TileWideText04

One string of regular text wrapped over a maximum of five lines.</value>
  </data>
  <data name="TileWide310x150Text05" xml:space="preserve">
    <value>Windows 8 name: TileWideText05

Five strings of regular text on five lines. Text does not wrap.</value>
  </data>
  <data name="TileWide310x150Text06" xml:space="preserve">
    <value>Windows 8 name: TileWideText06

Ten short strings of regular text, arranged in two columns of five lines each. Columns are of equal width.</value>
  </data>
  <data name="TileWide310x150Text07" xml:space="preserve">
    <value>Windows 8 name: TileWideText07

One header string in larger text over eight short strings of regular text arranged in two columns of four lines each. The column widths are such that the first column acts as a label and the second column as the content. This template is similar to TileWideText10, but the first column is wider.</value>
  </data>
  <data name="TileWide310x150Text08" xml:space="preserve">
    <value>Windows 8 name: TileWideText08

Ten short strings of regular text arranged in two columns of five lines each. The column widths are such that the first column acts as a label and the second column as the content. This template is similar to TileWideText11, but the first column is wider.</value>
  </data>
  <data name="TileWide310x150Text09" xml:space="preserve">
    <value>Windows 8 name: TileWideText09

One header string in larger text over one string of regular text wrapped over a maximum of four lines.</value>
  </data>
  <data name="TileWide310x150Text10" xml:space="preserve">
    <value>Windows 8 name: TileWideText10

One header string in larger text over eight short strings of regular text arranged in two columns of four lines each. The column widths are such that the first column acts as a label and the second column as the content. This template is similar to TileWideText07, but the first column is narrower.</value>
  </data>
  <data name="TileWide310x150Text11" xml:space="preserve">
    <value>Windows 8 name: TileWideText11

Ten short strings of regular text arranged in two columns of five lines each. The column widths are such that the first column acts as a label and the second column as the content. This template is similar to TileWideText08, but the first column is narrower.</value>
  </data>
  <data name="TileSquare71x71IconWithBadge" xml:space="preserve">
    <value>A single icon image. The icon image's background should be transparent to allow the tile color to show through. A badge, sent through a separate notification, is shown to the right of the image.

This template cannot display the app name or logo declared in your manifest. WindowsPhone-only template.</value>
  </data>
  <data name="TileSquare150x150IconWithBadge" xml:space="preserve">
    <value>A single icon image. The icon image's background should be transparent to allow the tile color to show through. A badge, sent through a separate notification, is shown to the right of the image. WindowsPhone-only template.</value>
  </data>
  <data name="TileWide310x150IconWithBadgeAndText" xml:space="preserve">
    <value>In the lower right corner, a single icon image. The icon image's background should be transparent to allow the tile color to show through. A badge, sent through a separate notification, is shown to the right of the image. WindowsPhone-only template.</value>
  </data>
  <data name="TileSquare71x71Image" xml:space="preserve">
    <value>One square image that fills the entire tile, no text. WindowsPhone-only template.</value>
  </data>
</root>