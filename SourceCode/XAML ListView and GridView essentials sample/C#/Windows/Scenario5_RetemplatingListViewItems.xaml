<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
//
//*********************************************************
-->
<Page x:Class="ListViewSimple.Scenario5" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="using:ListViewSimple" xmlns:common="using:SDKTemplate.Common" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">
  <Page.Resources>
    <DataTemplate x:Key="StoreFrontTileTemplate">
      <Grid HorizontalAlignment="Left" Background="{x:Null}">
        <StackPanel Orientation="Horizontal" Margin="10,10,0,0">
          <Image Source="{Binding Image}" Height="60" Width="60" VerticalAlignment="Center" Margin="0,0,10,0"/>
          <StackPanel Margin="0,0,0,0" Orientation="Vertical">
            <TextBlock TextWrapping="Wrap" Foreground="{StaticResource ApplicationForegroundThemeBrush}" FontSize="14.667" FontWeight="Light" Width="200" VerticalAlignment="Center" Text="{Binding Title}" HorizontalAlignment="Left" FontFamily="Segoe UI"/>
            <TextBlock TextWrapping="Wrap" Foreground="{StaticResource ApplicationForegroundThemeBrush}" FontSize="14.667" FontWeight="Light" Width="200" MaxHeight="20" VerticalAlignment="Center" Text="{Binding Category}" HorizontalAlignment="Left"/>
          </StackPanel>
        </StackPanel>
      </Grid>
    </DataTemplate>
    <!--Customized template for ListViewItems using ListViewItemPresenter-->
    <Thickness x:Key="CustomizedListViewItemPresenterSelectedBorderThickness">0,0,0,0</Thickness>
    <SolidColorBrush x:Key="CustomizedListViewItemPresenterHighlightBrush" Color="#444617B4"/>
    <Style x:Key="CustomizedListViewItemPresenterTemplate" TargetType="ListViewItem">
      <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
      <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="TabNavigation" Value="Local"/>
      <Setter Property="IsHoldingEnabled" Value="True"/>
      <Setter Property="Margin" Value="0,0,2,2"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ListViewItem">
            <ListViewItemPresenter ContentTransitions="{TemplateBinding ContentTransitions}" Margin="{TemplateBinding Padding}" SelectionCheckMarkVisualEnabled="True" CheckHintBrush="{ThemeResource ListViewItemCheckHintThemeBrush}" CheckSelectingBrush="{ThemeResource ListViewItemCheckSelectingThemeBrush}" CheckBrush="{ThemeResource ListViewItemCheckThemeBrush}" DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}" DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}" FocusBorderBrush="{x:Null}" PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}" PointerOverBackground="{StaticResource CustomizedListViewItemPresenterHighlightBrush}" SelectedBorderThickness="{StaticResource CustomizedListViewItemPresenterSelectedBorderThickness}" SelectedBackground="{StaticResource CustomizedListViewItemPresenterHighlightBrush}" SelectedForeground="{ThemeResource ListViewItemSelectedForegroundThemeBrush}" SelectedPointerOverBackground="{StaticResource CustomizedListViewItemPresenterHighlightBrush}" SelectedPointerOverBorderBrush="{ThemeResource ListViewItemSelectedPointerOverBorderThemeBrush}" DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}" DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}" ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </Page.Resources>
  <Grid x:Name="LayoutRoot" HorizontalAlignment="Left" VerticalAlignment="Top">
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>
    <Grid x:Name="Input" Grid.Row="0">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>
      <TextBlock x:Name="InputTextBlock1" TextWrapping="Wrap" Grid.Row="0" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left">
         The Windows 8.1 template for a ListViewItem only contains a
        ListViewItemPresenter as opposed to a tree of UIElements.
        ListViewItemPresenter provides a large startup improvement for pages
        which contain a ListView by allowing the framework to internally draw
        all of visuals which compose the ListViewItem template (not the data
        template). ListViewItemPresenter exposes a number of properties which
        can be set to allow a dev to customize the appearance of ListViewItems.
        While ListViewItem can be retemplated with a tree of UIElements instead
        of a ListViewItemPresenter, it's strongly recommended that devs try to
        use these properties to maintain the performance improvement
        ListViewItemPresenter provides. 
      </TextBlock>
      <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the input section -->
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup>
          <VisualState x:Name="InputDefaultLayout"/>
          <VisualState x:Name="InputBelow768Layout"/>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
    <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
      <!-- This shows a hard-coded height to show within the SDK Sample framework.  In a real application you likely wouldn't set a height on the ListView -->
      <ListView x:Name="ItemListView" Height="325" HorizontalAlignment="Left" Background="{StaticResource ApplicationPageBackgroundThemeBrush}" ItemTemplate="{StaticResource StoreFrontTileTemplate}" ItemContainerStyle="{StaticResource CustomizedListViewItemPresenterTemplate}" BorderBrush="LightGray" BorderThickness="1" SelectionMode="Multiple"/>
    </Grid>
  </Grid>
</Page>