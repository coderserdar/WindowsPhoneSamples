<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
--> 
<Page x:Class="SDKTemplate.ProximityDeviceScenario" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="using:SDKTemplate" xmlns:common="using:SDKSample.Common" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">
  <Grid x:Name="LayoutRoot" HorizontalAlignment="Left" VerticalAlignment="Top">
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>
    <Grid x:Name="Input" Grid.Row="0">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>
      <TextBlock x:Name="InputTextBlock1" TextWrapping="Wrap" Grid.Row="0" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left">
         When running this sample on two devices with Proximity devices installed,
        you can use the ProximityDevice to publish messages to the other device
        and/or subscribe to messages from the other device. Click 'Publish message'
        on one device, and click 'Subscribe for message' on the other and enter
        proximity with the two devices. The published message will be received on
        the device that subscribed. 
      </TextBlock>
      <StackPanel x:Name="PrimaryInputPanel" Orientation="Horizontal" Margin="0,10,0,0" Grid.Row="1">
        <Button x:Name="ProximityDevice_PublishMessageButton" Content="Publish message" Margin="0,0,10,0"/>
        <TextBox x:Name="ProximityDevice_PublishMessageText" Width="Auto"/>
      </StackPanel>
      <StackPanel Orientation="Horizontal" Margin="0,10,0,0" Grid.Row="2">
        <Button x:Name="ProximityDevice_SubscribeForMessageButton" Content="Subscribe for message" Margin="0,0,10,0"/>
      </StackPanel>
    </Grid>
    <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
      <TextBlock x:Name="ProximityDeviceOutputText" Style="{StaticResource BasicTextStyle}" TextWrapping="Wrap"/>
    </Grid>
    <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts -->
    <VisualStateManager.VisualStateGroups>
      <VisualStateGroup>
        <VisualState x:Name="DefaultLayout">
          <Storyboard>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PrimaryInputPanel" Storyboard.TargetProperty="Orientation">
              <DiscreteObjectKeyFrame KeyTime="0" Value="Horizontal"/>
            </ObjectAnimationUsingKeyFrames>
          </Storyboard>
        </VisualState>
        <VisualState x:Name="Below768Layout">
          <Storyboard>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PrimaryInputPanel" Storyboard.TargetProperty="Orientation">
              <DiscreteObjectKeyFrame KeyTime="0" Value="Vertical"/>
            </ObjectAnimationUsingKeyFrames>
          </Storyboard>
        </VisualState>
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
  </Grid>
</Page>
