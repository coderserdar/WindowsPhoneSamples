<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
--> 
<Page x:Class="NumberFormatting.NumberParsing" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="using:$rootsnamespace$" xmlns:common="using:SDKTemplate.Common" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">
  <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
    <ScrollViewer>
      <StackPanel Margin="10,10,10,10">
        <TextBlock Style="{StaticResource ScenarioDescriptionTextStyle}" TextWrapping="Wrap">
          This example demonstrates how to parse a number using an implied, but
          exact, pattern based on the language settings. An application using this
          method to parse a number can automatically assume that the pattern for
          that type of number will be applied based on the user's formatting
          preferences. An application can also choose to override the user's
          preferences and specify the settings to use for a given parse operation.
          <LineBreak/>
          <Run Text="   This example demonstrates how to parse a number as a currency, percent or decimal. The results displayed below show each of these types using the current user's preferences as well as two example forms."/>
        </TextBlock>
        <Button Content="Display" Click="Display_Click"/>
        <TextBlock x:Name="OutputTextBlock" Text="" TextWrapping="Wrap" Style="{StaticResource BaseMessageStyle}"/>
      </StackPanel>
    </ScrollViewer>
  </Grid>
</Page>